{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { theme } from \"./color\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar STORAGE_TODOS_KEY = \"@toDos\";\nvar STORAGE_CURRENT_WORK_KEY = \"@working\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      working = _useState2[0],\n      setWorking = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toDos = _useState6[0],\n      setToDos = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      update = _useState8[0],\n      setUpdate = _useState8[1];\n\n  useEffect(function () {\n    loadWork();\n    loadToDos();\n  }, []);\n\n  var saveCurrentWork = function saveCurrentWork(work) {\n    return _regeneratorRuntime.async(function saveCurrentWork$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_CURRENT_WORK_KEY, JSON.stringify(work)));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadWork = function loadWork() {\n    var savedWorking;\n    return _regeneratorRuntime.async(function loadWork$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_CURRENT_WORK_KEY));\n\n          case 2:\n            savedWorking = _context2.sent;\n            setWorking(JSON.parse(savedWorking));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saveToDos = function saveToDos(toSave) {\n    var toDoJSON;\n    return _regeneratorRuntime.async(function saveToDos$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            toDoJSON = JSON.stringify(toSave);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_TODOS_KEY, toDoJSON));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadToDos = function loadToDos() {\n    var toDoJSON;\n    return _regeneratorRuntime.async(function loadToDos$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_TODOS_KEY));\n\n          case 2:\n            toDoJSON = _context4.sent;\n\n            if (toDoJSON != null) {\n              setToDos(JSON.parse(toDoJSON));\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteToDo = function deleteToDo(key) {\n    var ok;\n    return _regeneratorRuntime.async(function deleteToDo$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (Platform.OS === \"web\") {\n              ok = confirm(\"Delete To Do?\");\n            } else {\n              Alert.alert(\"Delete To Do?\", \"Are you sure?\", [{\n                text: \"Cancel\"\n              }, {\n                text: \"I'm sure\",\n                style: \"destructive\",\n                onPress: function onPress() {\n                  var newToDos;\n                  return _regeneratorRuntime.async(function onPress$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          newToDos = _objectSpread({}, toDos);\n                          delete newToDos[key];\n                          setToDos(newToDos);\n                          _context5.next = 5;\n                          return _regeneratorRuntime.awrap(saveToDos(newToDos));\n\n                        case 5:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }\n              }]);\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var travel = function travel() {\n    var w;\n    return _regeneratorRuntime.async(function travel$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            w = false;\n            setWorking(w);\n            _context7.next = 4;\n            return _regeneratorRuntime.awrap(saveCurrentWork(w));\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var work = function work() {\n    var w;\n    return _regeneratorRuntime.async(function work$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            w = true;\n            setWorking(w);\n            _context8.next = 4;\n            return _regeneratorRuntime.awrap(saveCurrentWork(w));\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onDone = function onDone(key) {\n    var newToDos, currentDone;\n    return _regeneratorRuntime.async(function onDone$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            newToDos = _objectSpread({}, toDos);\n            currentDone = newToDos[key].done;\n            newToDos[key].done = !currentDone;\n            setToDos(newToDos);\n            _context9.next = 6;\n            return _regeneratorRuntime.awrap(saveToDos(newToDos));\n\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onUpdate = function onUpdate(key) {\n    setUpdate(key);\n  };\n\n  var onChangeText = function onChangeText(payload) {\n    return setText(payload);\n  };\n\n  var updateToDoText = function updateToDoText(key, text) {\n    var newToDos;\n    return _regeneratorRuntime.async(function updateToDoText$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            newToDos = _objectSpread({}, toDos);\n            newToDos[key].text = text;\n            setToDos(newToDos);\n            setUpdate(\"\");\n            _context10.next = 6;\n            return _regeneratorRuntime.awrap(saveToDos(newToDos));\n\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addToDo = function addToDo() {\n    var key, newToDos;\n    return _regeneratorRuntime.async(function addToDo$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            if (!(text === \"\")) {\n              _context11.next = 2;\n              break;\n            }\n\n            return _context11.abrupt(\"return\");\n\n          case 2:\n            key = Date.now();\n            newToDos = _objectSpread(_objectSpread({}, toDos), {}, _defineProperty({}, key, {\n              text: text,\n              working: working,\n              done: false\n            }));\n            console.log(newToDos);\n            setToDos(newToDos);\n            _context11.next = 8;\n            return _regeneratorRuntime.awrap(saveToDos(newToDos));\n\n          case 8:\n            setText(\"\");\n\n          case 9:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Pressable, {\n        onPress: work,\n        children: _jsx(Text, {\n          style: _objectSpread(_objectSpread({}, styles.btnText), {}, {\n            color: working ? \"white\" : theme.gray\n          }),\n          children: \"Work\"\n        })\n      }), _jsx(Pressable, {\n        onPress: travel,\n        children: _jsx(Text, {\n          style: _objectSpread(_objectSpread({}, styles.btnText), {}, {\n            color: working ? theme.gray : \"white\"\n          }),\n          children: \"Travel\"\n        })\n      })]\n    }), _jsx(View, {\n      children: _jsx(TextInput, {\n        onSubmitEditing: addToDo,\n        value: text,\n        onChangeText: onChangeText,\n        returnKeyType: \"done\",\n        placeholder: working ? \"Add a To Do\" : \"Where do you want to go?\",\n        style: styles.input\n      })\n    }), _jsx(ScrollView, {\n      children: toDos === null ? null : Object.keys(toDos).map(function (key) {\n        return toDos[key].working === working ? _jsxs(View, {\n          style: styles.toDo,\n          children: [_jsx(View, {\n            style: styles.toDoTextContainer,\n            children: update === key ? _jsx(TextInput, {\n              style: styles.toDoTextInput,\n              onSubmitEditing: function onSubmitEditing(_ref) {\n                var text = _ref.nativeEvent.text;\n                updateToDoText(key, text);\n              },\n              children: toDos[key].text\n            }) : _jsx(Text, {\n              numberOfLines: 0,\n              style: toDos[key].done === true ? _objectSpread(_objectSpread({}, styles.toDoText), {}, {\n                textDecorationLine: \"line-through\"\n              }) : styles.toDoText,\n              children: toDos[key].text\n            })\n          }), _jsxs(View, {\n            style: styles.accessoryContainer,\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                onDone(key);\n              },\n              children: toDos[key].done === true ? _jsx(AntDesign, {\n                name: \"checksquare\",\n                size: 24,\n                color: \"orange\"\n              }) : _jsx(AntDesign, {\n                name: \"checksquareo\",\n                size: 24,\n                color: \"orange\"\n              })\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                update === \"\" ? onUpdate(key) : onUpdate(\"\");\n              },\n              children: _jsx(Octicons, {\n                name: \"pencil\",\n                size: 24,\n                color: \"orange\"\n              })\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                deleteToDo(key);\n              },\n              children: _jsx(Ionicons, {\n                name: \"trash-outline\",\n                size: 24,\n                color: \"orange\"\n              })\n            })]\n          })]\n        }, key) : null;\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.background,\n    paddingHorizontal: 20\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 100\n  },\n  btnText: {\n    fontWeight: \"600\",\n    fontSize: 38\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginVertical: 20,\n    fontSize: 18\n  },\n  toDo: {\n    flex: 1,\n    backgroundColor: theme.toDoBg,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  toDoText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  accessoryContainer: {\n    flex: 1.5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginLeft: 10\n  },\n  toDoTextContainer: {\n    flex: 3\n  },\n  toDoTextInput: {\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: 16,\n    fontWeight: \"500\",\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["E:/javascript/reactnative-memo/App.js"],"names":["StatusBar","useState","useEffect","theme","AsyncStorage","Ionicons","AntDesign","Octicons","STORAGE_TODOS_KEY","STORAGE_CURRENT_WORK_KEY","App","working","setWorking","text","setText","toDos","setToDos","update","setUpdate","loadWork","loadToDos","saveCurrentWork","work","setItem","JSON","stringify","getItem","savedWorking","parse","saveToDos","toSave","toDoJSON","deleteToDo","key","Platform","OS","ok","confirm","Alert","alert","style","onPress","newToDos","travel","w","onDone","currentDone","done","onUpdate","onChangeText","payload","updateToDoText","addToDo","Date","now","console","log","styles","container","header","btnText","color","gray","input","Object","keys","map","toDo","toDoTextContainer","toDoTextInput","nativeEvent","toDoText","textDecorationLine","accessoryContainer","StyleSheet","create","flex","backgroundColor","background","paddingHorizontal","justifyContent","flexDirection","marginTop","fontWeight","fontSize","paddingVertical","borderRadius","marginVertical","toDoBg","marginBottom","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Pressable,\r\n    TextInput,\r\n    ScrollView,\r\n    Alert,\r\n    Platform,\r\n} from \"react-native\";\r\nimport { theme } from \"./color\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Octicons } from \"@expo/vector-icons\";\r\n\r\nconst STORAGE_TODOS_KEY = \"@toDos\";\r\nconst STORAGE_CURRENT_WORK_KEY = \"@working\";\r\n\r\nexport default function App() {\r\n    const [working, setWorking] = useState(true);\r\n    const [text, setText] = useState(\"\");\r\n    const [toDos, setToDos] = useState({});\r\n    const [update, setUpdate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        loadWork();\r\n        loadToDos();\r\n    }, []);\r\n\r\n    const saveCurrentWork = async (work) => {\r\n        await AsyncStorage.setItem(\r\n            STORAGE_CURRENT_WORK_KEY,\r\n            JSON.stringify(work),\r\n        );\r\n    };\r\n\r\n    const loadWork = async () => {\r\n        const savedWorking = await AsyncStorage.getItem(\r\n            STORAGE_CURRENT_WORK_KEY,\r\n        );\r\n        setWorking(JSON.parse(savedWorking));\r\n    };\r\n\r\n    const saveToDos = async (toSave) => {\r\n        const toDoJSON = JSON.stringify(toSave);\r\n        await AsyncStorage.setItem(STORAGE_TODOS_KEY, toDoJSON);\r\n    };\r\n\r\n    const loadToDos = async () => {\r\n        const toDoJSON = await AsyncStorage.getItem(STORAGE_TODOS_KEY);\r\n        if (toDoJSON != null) {\r\n            setToDos(JSON.parse(toDoJSON));\r\n        }\r\n    };\r\n\r\n    const deleteToDo = async (key) => {\r\n        if (Platform.OS === \"web\") {\r\n            const ok = confirm(\"Delete To Do?\");\r\n        } else {\r\n            Alert.alert(\"Delete To Do?\", \"Are you sure?\", [\r\n                { text: \"Cancel\" },\r\n                {\r\n                    text: \"I'm sure\",\r\n                    style: \"destructive\",\r\n                    onPress: async () => {\r\n                        const newToDos = { ...toDos };\r\n                        delete newToDos[key];\r\n                        setToDos(newToDos);\r\n\r\n                        await saveToDos(newToDos);\r\n                    },\r\n                },\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const travel = async () => {\r\n        const w = false;\r\n        setWorking(w);\r\n        await saveCurrentWork(w);\r\n    };\r\n\r\n    const work = async () => {\r\n        const w = true;\r\n        setWorking(w);\r\n        await saveCurrentWork(w);\r\n    };\r\n\r\n    const onDone = async (key) => {\r\n        const newToDos = { ...toDos };\r\n        let currentDone = newToDos[key].done;\r\n        newToDos[key].done = !currentDone;\r\n        setToDos(newToDos);\r\n\r\n        await saveToDos(newToDos);\r\n    };\r\n\r\n    const onUpdate = (key) => {\r\n        setUpdate(key);\r\n    };\r\n\r\n    const onChangeText = (payload) => setText(payload);\r\n    const updateToDoText = async (key, text) => {\r\n        const newToDos = { ...toDos };\r\n        newToDos[key].text = text;\r\n\r\n        setToDos(newToDos);\r\n        setUpdate(\"\");\r\n\r\n        await saveToDos(newToDos);\r\n    };\r\n    const addToDo = async () => {\r\n        if (text === \"\") {\r\n            return;\r\n        }\r\n\r\n        const key = Date.now();\r\n\r\n        const newToDos = {\r\n            ...toDos,\r\n            [key]: { text, working, done: false },\r\n        };\r\n\r\n        console.log(newToDos);\r\n\r\n        setToDos(newToDos);\r\n        await saveToDos(newToDos);\r\n        setText(\"\");\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar style=\"auto\" />\r\n            <View style={styles.header}>\r\n                <Pressable onPress={work}>\r\n                    <Text\r\n                        style={{\r\n                            ...styles.btnText,\r\n                            color: working ? \"white\" : theme.gray,\r\n                        }}\r\n                    >\r\n                        Work\r\n                    </Text>\r\n                </Pressable>\r\n                <Pressable onPress={travel}>\r\n                    <Text\r\n                        style={{\r\n                            ...styles.btnText,\r\n                            color: working ? theme.gray : \"white\",\r\n                        }}\r\n                    >\r\n                        Travel\r\n                    </Text>\r\n                </Pressable>\r\n            </View>\r\n            <View>\r\n                <TextInput\r\n                    onSubmitEditing={addToDo}\r\n                    value={text}\r\n                    onChangeText={onChangeText}\r\n                    returnKeyType=\"done\"\r\n                    placeholder={\r\n                        working ? \"Add a To Do\" : \"Where do you want to go?\"\r\n                    }\r\n                    style={styles.input}\r\n                />\r\n            </View>\r\n            <ScrollView>\r\n                {toDos === null\r\n                    ? null\r\n                    : Object.keys(toDos).map((key) =>\r\n                          toDos[key].working === working ? (\r\n                              <View style={styles.toDo} key={key}>\r\n                                  <View style={styles.toDoTextContainer}>\r\n                                      {update === key ? (\r\n                                          <TextInput\r\n                                              style={styles.toDoTextInput}\r\n                                              onSubmitEditing={({\r\n                                                  nativeEvent: { text },\r\n                                              }) => {\r\n                                                  updateToDoText(key, text);\r\n                                              }}\r\n                                          >\r\n                                              {toDos[key].text}\r\n                                          </TextInput>\r\n                                      ) : (\r\n                                          <Text\r\n                                              numberOfLines={0}\r\n                                              style={\r\n                                                  toDos[key].done === true\r\n                                                      ? {\r\n                                                            ...styles.toDoText,\r\n                                                            textDecorationLine:\r\n                                                                \"line-through\",\r\n                                                        }\r\n                                                      : styles.toDoText\r\n                                              }\r\n                                          >\r\n                                              {toDos[key].text}\r\n                                          </Text>\r\n                                      )}\r\n                                  </View>\r\n\r\n                                  <View style={styles.accessoryContainer}>\r\n                                      <Pressable\r\n                                          onPress={() => {\r\n                                              onDone(key);\r\n                                          }}\r\n                                      >\r\n                                          {toDos[key].done === true ? (\r\n                                              <AntDesign\r\n                                                  name=\"checksquare\"\r\n                                                  size={24}\r\n                                                  color=\"orange\"\r\n                                              />\r\n                                          ) : (\r\n                                              <AntDesign\r\n                                                  name=\"checksquareo\"\r\n                                                  size={24}\r\n                                                  color=\"orange\"\r\n                                              />\r\n                                          )}\r\n                                      </Pressable>\r\n\r\n                                      <Pressable\r\n                                          onPress={() => {\r\n                                              update === \"\"\r\n                                                  ? onUpdate(key)\r\n                                                  : onUpdate(\"\");\r\n                                          }}\r\n                                      >\r\n                                          <Octicons\r\n                                              name=\"pencil\"\r\n                                              size={24}\r\n                                              color=\"orange\"\r\n                                          />\r\n                                      </Pressable>\r\n                                      <Pressable\r\n                                          onPress={() => {\r\n                                              deleteToDo(key);\r\n                                          }}\r\n                                      >\r\n                                          <Ionicons\r\n                                              name=\"trash-outline\"\r\n                                              size={24}\r\n                                              color=\"orange\"\r\n                                          />\r\n                                      </Pressable>\r\n                                  </View>\r\n                              </View>\r\n                          ) : null,\r\n                      )}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: theme.background,\r\n        paddingHorizontal: 20,\r\n    },\r\n\r\n    header: {\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        marginTop: 100,\r\n    },\r\n\r\n    btnText: {\r\n        fontWeight: \"600\",\r\n        fontSize: 38,\r\n    },\r\n\r\n    input: {\r\n        backgroundColor: \"white\",\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 20,\r\n        borderRadius: 30,\r\n        marginVertical: 20,\r\n        fontSize: 18,\r\n    },\r\n\r\n    toDo: {\r\n        flex: 1,\r\n        backgroundColor: theme.toDoBg,\r\n        marginBottom: 10,\r\n        paddingVertical: 20,\r\n        paddingHorizontal: 20,\r\n        borderRadius: 15,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n\r\n    toDoText: {\r\n        color: \"white\",\r\n        fontSize: 16,\r\n        fontWeight: \"500\",\r\n    },\r\n\r\n    accessoryContainer: {\r\n        flex: 1.5,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        marginLeft: 10,\r\n    },\r\n\r\n    toDoTextContainer: {\r\n        flex: 3,\r\n    },\r\n\r\n    toDoTextInput: {\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        fontSize: 16,\r\n        fontWeight: \"500\",\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 10,\r\n        borderRadius: 5,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}